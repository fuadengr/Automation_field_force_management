{
	"info": {
		"_postman_id": "b5311846-649d-4b8c-8390-aa6f0ffdb5ac",
		"name": "Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Automation",
			"item": [
				{
					"name": "FFME2-19 Register_company",
					"item": [
						{
							"name": "1. FFME2-19 Registering_company",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3c8b83a-56a7-48fd-aeba-32a27a93281d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"data\": {\r",
											"                \"company_address\": \"pennyslvania\",\r",
											"                \"company_name\": \"Workspace\",\r",
											"                \"tin\": \"1122002233\"\r",
											"            },\r",
											"            \"message\": \"Successfully registered company 'Workspace' .\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"data\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"data\": {\r",
											"            \"$id\": \"#/properties/data\",\r",
											"            \"type\": \"object\",\r",
											"            \"title\": \"The data schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": {},\r",
											"            \"examples\": [\r",
											"                {\r",
											"                    \"company_address\": \"California\",\r",
											"                    \"company_name\": \"Hollister\",\r",
											"                    \"tin\": \"5863659323\"\r",
											"                }\r",
											"            ],\r",
											"            \"required\": [\r",
											"                \"company_address\",\r",
											"                \"company_name\",\r",
											"                \"tin\"\r",
											"            ],\r",
											"            \"properties\": {\r",
											"                \"company_address\": {\r",
											"                    \"$id\": \"#/properties/data/properties/company_address\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The company_address schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"pennyslvania\"\r",
											"                    ]\r",
											"                },\r",
											"                \"company_name\": {\r",
											"                    \"$id\": \"#/properties/data/properties/company_name\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The company_name schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"Workspace\"\r",
											"                    ]\r",
											"                },\r",
											"                \"tin\": {\r",
											"                    \"$id\": \"#/properties/data/properties/tin\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The tin schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"1122002233\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"additionalProperties\": true\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully registered company 'Workspace' .\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"  \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Hollister\",\r\n    \"address\": \"California\",\r\n    \"tin\": \"5863659323\"\r\n}"
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/register-company",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: As a techserve4u admin, I want to create a new company from the admin panel so that they can use our services.\r\n\r\nTester need to pass these informations of the company's in the body section:\r\n\r\nPost Data: \r\n\tname -> string\r\n\taddress -> string\r\n\ttin -> string\r\n\t\r\n\r\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-18 Create_company_admin",
					"item": [
						{
							"name": "1. FFME2-19 Registering_company",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac1195e5-9d91-4b49-9c19-23c79c17522d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"data\": {\r",
											"                \"company_address\": \"pennyslvania\",\r",
											"                \"company_name\": \"Workspace\",\r",
											"                \"tin\": \"1122002233\"\r",
											"            },\r",
											"            \"message\": \"Successfully registered company 'Workspace' .\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"data\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"data\": {\r",
											"            \"$id\": \"#/properties/data\",\r",
											"            \"type\": \"object\",\r",
											"            \"title\": \"The data schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": {},\r",
											"            \"examples\": [\r",
											"                {\r",
											"                    \"company_address\": \"California\",\r",
											"                    \"company_name\": \"Hollister\",\r",
											"                    \"tin\": \"5863659323\"\r",
											"                }\r",
											"            ],\r",
											"            \"required\": [\r",
											"                \"company_address\",\r",
											"                \"company_name\",\r",
											"                \"tin\"\r",
											"            ],\r",
											"            \"properties\": {\r",
											"                \"company_address\": {\r",
											"                    \"$id\": \"#/properties/data/properties/company_address\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The company_address schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"pennyslvania\"\r",
											"                    ]\r",
											"                },\r",
											"                \"company_name\": {\r",
											"                    \"$id\": \"#/properties/data/properties/company_name\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The company_name schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"Workspace\"\r",
											"                    ]\r",
											"                },\r",
											"                \"tin\": {\r",
											"                    \"$id\": \"#/properties/data/properties/tin\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The tin schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"1122002233\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"additionalProperties\": true\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully registered company 'Workspace' .\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"  \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Hollister\",\r\n    \"address\": \"California\",\r\n    \"tin\": \"5863659323\"\r\n}"
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/register-company",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-company"
									]
								},
								"description": "BRD: Techserve4u admin should be able to register company from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: As a techserve4u admin, I want to create a new company from the admin panel so that they can use our services.\r\n\r\nTester need to pass these informations of the company's in the body section:\r\n\r\nPost Data: \r\n\tname -> string\r\n\taddress -> string\r\n\ttin -> string\r\n\t\r\n\r\n"
							},
							"response": []
						},
						{
							"name": "1.2 FFME2-18 Register_Company_Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a609968-b4d7-4690-8cee-0a455a111319",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"data\": {\r",
											"                \"company_address\": \"pennyslvania\",\r",
											"                \"company_name\": \"Workspace\",\r",
											"                \"tin\": \"1122002233\"\r",
											"            },\r",
											"            \"message\": \"Successfully registered company 'Workspace' .\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"data\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"data\": {\r",
											"            \"$id\": \"#/properties/data\",\r",
											"            \"type\": \"object\",\r",
											"            \"title\": \"The data schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": {},\r",
											"            \"examples\": [\r",
											"                {\r",
											"                    \"company_address\": \"pennyslvania\",\r",
											"                    \"company_name\": \"Workspace\",\r",
											"                    \"tin\": \"1122002233\"\r",
											"                }\r",
											"            ],\r",
											"            \"required\": [\r",
											"                \"company_address\",\r",
											"                \"company_name\",\r",
											"                \"tin\"\r",
											"            ],\r",
											"            \"properties\": {\r",
											"                \"company_address\": {\r",
											"                    \"$id\": \"#/properties/data/properties/company_address\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The company_address schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"pennyslvania\"\r",
											"                    ]\r",
											"                },\r",
											"                \"company_name\": {\r",
											"                    \"$id\": \"#/properties/data/properties/company_name\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The company_name schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"Workspace\"\r",
											"                    ]\r",
											"                },\r",
											"                \"tin\": {\r",
											"                    \"$id\": \"#/properties/data/properties/tin\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The tin schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"1122002233\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"additionalProperties\": true\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully registered company 'Workspace' .\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"email\": \"california@yahoo.com\",\r\n \"password\": \"1asdf234\",\r\n \"username\": \"California\",\r\n \"firstname\": \"Mr\",\r\n \"lastname\": \"abc\",\r\n \"company_id\": 175,\r\n \"member_type\": 2\r\n}\r\n"
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "Precondition: User should be able to registraion their company to our service.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able to create many user's under their company panel. Register Panel Users for Web Admin Dashboard\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\n\r\n \"email\": (unique)\r\n \"password\":\r\n \"username\": (unique)\r\n \"firstname\":\r\n \"lastname\": \r\n \"company_id\": (From database)\r\n \"member_type\": (default number is 2)\r\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-16 Company_admin_login",
					"item": [
						{
							"name": "1.2 FFME2-18 Register_Company_Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54ade6a9-e8e5-4800-b6a5-c1713ba46b20",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"data\": {\r",
											"                \"company_address\": \"pennyslvania\",\r",
											"                \"company_name\": \"Workspace\",\r",
											"                \"tin\": \"1122002233\"\r",
											"            },\r",
											"            \"message\": \"Successfully registered company 'Workspace' .\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"data\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"data\": {\r",
											"            \"$id\": \"#/properties/data\",\r",
											"            \"type\": \"object\",\r",
											"            \"title\": \"The data schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": {},\r",
											"            \"examples\": [\r",
											"                {\r",
											"                    \"company_address\": \"pennyslvania\",\r",
											"                    \"company_name\": \"Workspace\",\r",
											"                    \"tin\": \"1122002233\"\r",
											"                }\r",
											"            ],\r",
											"            \"required\": [\r",
											"                \"company_address\",\r",
											"                \"company_name\",\r",
											"                \"tin\"\r",
											"            ],\r",
											"            \"properties\": {\r",
											"                \"company_address\": {\r",
											"                    \"$id\": \"#/properties/data/properties/company_address\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The company_address schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"pennyslvania\"\r",
											"                    ]\r",
											"                },\r",
											"                \"company_name\": {\r",
											"                    \"$id\": \"#/properties/data/properties/company_name\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The company_name schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"Workspace\"\r",
											"                    ]\r",
											"                },\r",
											"                \"tin\": {\r",
											"                    \"$id\": \"#/properties/data/properties/tin\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The tin schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"1122002233\"\r",
											"                    ]\r",
											"                }\r",
											"            },\r",
											"            \"additionalProperties\": true\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully registered company 'Workspace' .\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"email\": \"california@yahoo.com\",\r\n \"password\": \"1asdf234\",\r\n \"username\": \"California\",\r\n \"firstname\": \"Mr\",\r\n \"lastname\": \"abc\",\r\n \"company_id\": 175,\r\n \"member_type\": 2\r\n}\r\n"
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/register-dashboard-user",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-dashboard-user"
									]
								},
								"description": "Precondition: User should be able to registraion their company to our service.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able to create many user's under their company panel. Register Panel Users for Web Admin Dashboard\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\n\r\n \"email\": (unique)\r\n \"password\":\r\n \"username\": (unique)\r\n \"firstname\":\r\n \"lastname\": \r\n \"company_id\": (From database)\r\n \"member_type\": (default number is 2)\r\n"
							},
							"response": []
						},
						{
							"name": "1.3 FFME2-16 SuperAdmin_Company_Admin_login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "186c0189-38d8-451b-990c-4e27a995a9bb",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"auth_token\", jsonData.auth_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\",\r",
											"            \"message\": \"Successfully logged in.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"auth_token\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"auth_token\": {\r",
											"            \"$id\": \"#/properties/auth_token\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The auth_token schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\"\r",
											"            ]\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully logged in.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"california@yahoo.com\",\r\n    \"password\": \"1asdf234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/dashboard-user-login",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"dashboard-user-login"
									]
								},
								"description": "Precondition: User should be able to registerd as a panel user in the company. \r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able login their own panel which registerd by their admin. Gain access to the Web Admin Panel with the Panel Admin Credentials\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\nemail:\r\npassword:\r\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-17 Admin_authentication",
					"item": [
						{
							"name": "1.3 FFME2-16 SuperAdmin_Company_Admin_login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "269a5268-5c55-4522-9748-7b4e98135d98",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"auth_token\", jsonData.auth_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA4NjEsImlhdCI6MTYwMTA1NzI2MSwic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.pZv7R0FkvhUVcqRm0pF8TzMuVaot-cA7L6MPZBl7mVE\",\r",
											"            \"message\": \"Successfully logged in.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"auth_token\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"auth_token\": {\r",
											"            \"$id\": \"#/properties/auth_token\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The auth_token schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA4NjEsImlhdCI6MTYwMTA1NzI2MSwic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.pZv7R0FkvhUVcqRm0pF8TzMuVaot-cA7L6MPZBl7mVE\"\r",
											"            ]\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully logged in.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"california@yahoo.com\",\r\n    \"password\": \"1asdf234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/dashboard-user-login",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"dashboard-user-login"
									]
								},
								"description": "Precondition: User should be able to registerd as a panel user in the company. \r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able login their own panel which registerd by their admin. Gain access to the Web Admin Panel with the Panel Admin Credentials\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\nemail:\r\npassword:\r\n"
							},
							"response": []
						},
						{
							"name": "1.4  FFME-17 To_see__admin_is_Authenticated",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c12c98c-c7c9-4ce6-bf30-218f2bfcae4f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"auth_token\", jsonData.auth_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"data\": 347,\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"data\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"data\": {\r",
											"            \"$id\": \"#/properties/data\",\r",
											"            \"type\": \"integer\",\r",
											"            \"title\": \"The data schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": 0,\r",
											"            \"examples\": [\r",
											"                347\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{authUrl}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/authenticate-dashboard-user",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"authenticate-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u admin and company admin should be able to authenticate for the admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\n\r\nMakes a get request with Bearer Token as Authorization parameter in the Header configuration.\r\n\r\nRequest Header:\r\n\t- Authorization: 'Bearer $JWT_auth_token'\r\n\r\nResponds back the user_id and a success message"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-14 Register_users",
					"item": [
						{
							"name": "1.3 FFME2-16 SuperAdmin_Company_Admin_login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c638e16-9727-4ea5-b91b-6a681dafae84",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"auth_token\", jsonData.auth_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\",\r",
											"            \"message\": \"Successfully logged in.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"auth_token\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"auth_token\": {\r",
											"            \"$id\": \"#/properties/auth_token\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The auth_token schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\"\r",
											"            ]\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully logged in.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"california@yahoo.com\",\r\n    \"password\": \"1asdf234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/dashboard-user-login",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"dashboard-user-login"
									]
								},
								"description": "Precondition: User should be able to registerd as a panel user in the company. \r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able login their own panel which registerd by their admin. Gain access to the Web Admin Panel with the Panel Admin Credentials\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\nemail:\r\npassword:\r\n"
							},
							"response": []
						},
						{
							"name": "2. FFME2-14  Create_or_Register_Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9e9cbda0-90c2-4935-9d2e-0aa5723d58f2",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": \"Successfully registered.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully registered.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{authUrl}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"BD\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"fffffffffffffffff\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/register-user",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPrecondition: User should be able to registered with valid Phone number, company id, iso code, firstname, lastname, NID, designation, department.\r\n\r\nObjective: User should be able to registration to the system.\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\n\"phone_number\": (Need to be unique)\r\n\"company_id\": \r\n\"iso_code\": \r\n\"first_name\": \r\n\"last_name\": \r\n\"nid\": \r\n\"designation\": \r\n\"department\": \r\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-12 User_login",
					"item": [
						{
							"name": "2. FFME2-14  Create_or_Register_Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4606d3a0-881e-4d49-8bc4-4ca2be99ce9b",
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": \"Successfully registered.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully registered.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{authUrl}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"company_id\": 175,\r\n    \"iso_code\": \"BD\",\r\n    \"first_name\": \"Abidur\",\r\n    \"last_name\": \"Rahman\",\r\n    \"nid\": \"fffffffffffffffff\",\r\n    \"designation\": \"QA Guy\",\r\n    \"department\": \"Tech\"\r\n}"
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/register-user",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"register-user"
									]
								},
								"description": "BRD: Company admin should be able to register app user from admin panel.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPrecondition: User should be able to registered with valid Phone number, company id, iso code, firstname, lastname, NID, designation, department.\r\n\r\nObjective: User should be able to registration to the system.\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\n\"phone_number\": (Need to be unique)\r\n\"company_id\": \r\n\"iso_code\": \r\n\"first_name\": \r\n\"last_name\": \r\n\"nid\": \r\n\"designation\": \r\n\"department\": \r\n"
							},
							"response": []
						},
						{
							"name": "2.1 FFME2-12 User_login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "587e6b09-e5a6-4e96-9f05-d750ddc6da9f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"auth_token1\", jsonData.auth_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\",\r",
											"            \"message\": \"Successfully logged in.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"auth_token\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"auth_token\": {\r",
											"            \"$id\": \"#/properties/auth_token\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The auth_token schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\"\r",
											"            ]\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully logged in.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/user-login",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPrecondition: User should be registered with the system.\r\n\r\nObjective: User should be able to login with their valid information. Log in as user and gives back a JWT Token with user-data.\r\n\r\nTester need to pass these data in the body section\r\n\r\nRequest Body:\r\n\r\n\"phone_number\": \r\n\"firebase_id\": \r\n\"secret_text\": \r\n\"phone_number_int\": \r\n\"iso_code\":\r\n"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-13 App_user_authentication",
					"item": [
						{
							"name": "2.1 FFME2-12 User_login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "48e78190-cc28-46ab-ada4-d6ca667fe66c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"auth_token1\", jsonData.auth_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\",\r",
											"            \"message\": \"Successfully logged in.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"auth_token\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"auth_token\": {\r",
											"            \"$id\": \"#/properties/auth_token\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The auth_token schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\"\r",
											"            ]\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully logged in.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/user-login",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPrecondition: User should be registered with the system.\r\n\r\nObjective: User should be able to login with their valid information. Log in as user and gives back a JWT Token with user-data.\r\n\r\nTester need to pass these data in the body section\r\n\r\nRequest Body:\r\n\r\n\"phone_number\": \r\n\"firebase_id\": \r\n\"secret_text\": \r\n\"phone_number_int\": \r\n\"iso_code\":\r\n"
							},
							"response": []
						},
						{
							"name": "2.2 FFME2-13 App_user_authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69c2fe61-c054-4071-a454-c2cadc77f680",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"data\": 168,\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"data\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"data\": {\r",
											"            \"$id\": \"#/properties/data\",\r",
											"            \"type\": \"integer\",\r",
											"            \"title\": \"The data schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": 0,\r",
											"            \"examples\": [\r",
											"                168\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token1}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{authUrl}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/authenticate-user",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"authenticate-user"
									]
								},
								"description": "BRD: App user should be able to authenticate.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPre condition: Registered FFM app users should be able to login with valid credentials.\r\n\r\nObjective: GET request to  authenticate the user for rest of the work.\r\n\r\nRequest Header:\r\n\t- Authorization: 'Bearer $JWT_auth_token'\r\n\r\nResponse: Success message "
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-11 App_user_view_list",
					"item": [
						{
							"name": "2.1 FFME2-12 User_login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c8975ac-8cec-49a9-b27f-91a0ac7e6c82",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"auth_token1\", jsonData.auth_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\",\r",
											"            \"message\": \"Successfully logged in.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"auth_token\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"auth_token\": {\r",
											"            \"$id\": \"#/properties/auth_token\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The auth_token schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\"\r",
											"            ]\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully logged in.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/user-login",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPrecondition: User should be registered with the system.\r\n\r\nObjective: User should be able to login with their valid information. Log in as user and gives back a JWT Token with user-data.\r\n\r\nTester need to pass these data in the body section\r\n\r\nRequest Body:\r\n\r\n\"phone_number\": \r\n\"firebase_id\": \r\n\"secret_text\": \r\n\"phone_number_int\": \r\n\"iso_code\":\r\n"
							},
							"response": []
						},
						{
							"name": "2.3  FFME2-11 App_User_View_The_User_list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "82a32745-59c3-4fc1-860d-caff13036c6f",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"array\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": [],\r",
											"    \"examples\": [\r",
											"        [\r",
											"            {\r",
											"                \"department\": null,\r",
											"                \"designation\": null,\r",
											"                \"email\": \"california@yahoo.com\",\r",
											"                \"name\": \"Mr abc\",\r",
											"                \"phone_number\": \"\",\r",
											"                \"profile_photo\": \"\"\r",
											"            },\r",
											"            {\r",
											"                \"department\": null,\r",
											"                \"designation\": null,\r",
											"                \"email\": \"californiaaaaa@yahoo.com\",\r",
											"                \"name\": \"Mra abca\",\r",
											"                \"phone_number\": \"\",\r",
											"                \"profile_photo\": \"\"\r",
											"            }\r",
											"        ]\r",
											"    ],\r",
											"    \"additionalItems\": true,\r",
											"    \"items\": {\r",
											"        \"$id\": \"#/items\",\r",
											"        \"anyOf\": [\r",
											"            {\r",
											"                \"$id\": \"#/items/anyOf/0\",\r",
											"                \"type\": \"object\",\r",
											"                \"title\": \"The first anyOf schema\",\r",
											"                \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                \"default\": {},\r",
											"                \"examples\": [\r",
											"                    {\r",
											"                        \"department\": null,\r",
											"                        \"designation\": null,\r",
											"                        \"email\": \"california@yahoo.com\",\r",
											"                        \"name\": \"Mr abc\",\r",
											"                        \"phone_number\": \"\",\r",
											"                        \"profile_photo\": \"\"\r",
											"                    }\r",
											"                ],\r",
											"                \"required\": [\r",
											"                    \"department\",\r",
											"                    \"designation\",\r",
											"                    \"email\",\r",
											"                    \"name\",\r",
											"                    \"phone_number\",\r",
											"                    \"profile_photo\"\r",
											"                ],\r",
											"                \"properties\": {\r",
											"                    \"department\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/department\",\r",
											"                        \"type\": \"null\",\r",
											"                        \"title\": \"The department schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": null,\r",
											"                        \"examples\": [\r",
											"                            null\r",
											"                        ]\r",
											"                    },\r",
											"                    \"designation\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/designation\",\r",
											"                        \"type\": \"null\",\r",
											"                        \"title\": \"The designation schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": null,\r",
											"                        \"examples\": [\r",
											"                            null\r",
											"                        ]\r",
											"                    },\r",
											"                    \"email\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/email\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The email schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"california@yahoo.com\"\r",
											"                        ]\r",
											"                    },\r",
											"                    \"name\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/name\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The name schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"Mr abc\"\r",
											"                        ]\r",
											"                    },\r",
											"                    \"phone_number\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/phone_number\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The phone_number schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"\"\r",
											"                        ]\r",
											"                    },\r",
											"                    \"profile_photo\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/profile_photo\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The profile_photo schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"\"\r",
											"                        ]\r",
											"                    }\r",
											"                },\r",
											"                \"additionalProperties\": true\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token1}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{authUrl}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/get-company-contacts",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"get-company-contacts"
									]
								},
								"description": "BRD:App user should be able to get all the contact information of their company.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPre condition: Registered FFM app users should be able to login with valid credentials.\r\n\r\nSteps:GET request to list out all the users and their roles from db.\r\n\r\nRequest Header: 'Authorization: Bearer $JWT_auth_token'\r\n\r\nResponse: User list with their all informations."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-15 Comapny_admin_view_the_list",
					"item": [
						{
							"name": "1.3 FFME2-16 SuperAdmin_Company_Admin_login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6117ec21-d084-4ae3-8da7-c925b666832d",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"auth_token\", jsonData.auth_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\",\r",
											"            \"message\": \"Successfully logged in.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"auth_token\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"auth_token\": {\r",
											"            \"$id\": \"#/properties/auth_token\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The auth_token schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\"\r",
											"            ]\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully logged in.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"california@yahoo.com\",\r\n    \"password\": \"1asdf234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/dashboard-user-login",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"dashboard-user-login"
									]
								},
								"description": "Precondition: User should be able to registerd as a panel user in the company. \r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able login their own panel which registerd by their admin. Gain access to the Web Admin Panel with the Panel Admin Credentials\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\nemail:\r\npassword:\r\n"
							},
							"response": []
						},
						{
							"name": "3.1.5  FFME2-15 Company_Admin_should_view_the_list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd4a038d-85c3-4d3d-8e69-d398c9b0ef06",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 800ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= \r",
											"{\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"array\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": [],\r",
											"    \"examples\": [\r",
											"        [\r",
											"            {\r",
											"                \"email\": null,\r",
											"                \"first_name\": \"Abidur\",\r",
											"                \"id\": 168,\r",
											"                \"phone_number\": \"01767666911\",\r",
											"                \"registered_on\": \"Wed, 16 Sep 2020 19:53:17 GMT\"\r",
											"            },\r",
											"            {\r",
											"                \"email\": null,\r",
											"                \"first_name\": \"Abidur\",\r",
											"                \"id\": 175,\r",
											"                \"phone_number\": \"01767666999\",\r",
											"                \"registered_on\": \"Sun, 20 Sep 2020 01:47:16 GMT\"\r",
											"            }\r",
											"        ]\r",
											"    ],\r",
											"    \"additionalItems\": true,\r",
											"    \"items\": {\r",
											"        \"$id\": \"#/items\",\r",
											"        \"anyOf\": [\r",
											"            {\r",
											"                \"$id\": \"#/items/anyOf/0\",\r",
											"                \"type\": \"object\",\r",
											"                \"title\": \"The first anyOf schema\",\r",
											"                \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                \"default\": {},\r",
											"                \"examples\": [\r",
											"                    {\r",
											"                        \"email\": null,\r",
											"                        \"first_name\": \"Abidur\",\r",
											"                        \"id\": 168,\r",
											"                        \"phone_number\": \"01767666911\",\r",
											"                        \"registered_on\": \"Wed, 16 Sep 2020 19:53:17 GMT\"\r",
											"                    }\r",
											"                ],\r",
											"                \"required\": [\r",
											"                    \"email\",\r",
											"                    \"first_name\",\r",
											"                    \"id\",\r",
											"                    \"phone_number\",\r",
											"                    \"registered_on\"\r",
											"                ],\r",
											"                \"properties\": {\r",
											"                    \"email\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/email\",\r",
											"                        \"type\": \"null\",\r",
											"                        \"title\": \"The email schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": null,\r",
											"                        \"examples\": [\r",
											"                            null\r",
											"                        ]\r",
											"                    },\r",
											"                    \"first_name\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/first_name\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The first_name schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"Abidur\"\r",
											"                        ]\r",
											"                    },\r",
											"                    \"id\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/id\",\r",
											"                        \"type\": \"integer\",\r",
											"                        \"title\": \"The id schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": 0,\r",
											"                        \"examples\": [\r",
											"                            168\r",
											"                        ]\r",
											"                    },\r",
											"                    \"phone_number\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/phone_number\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The phone_number schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"01767666911\"\r",
											"                        ]\r",
											"                    },\r",
											"                    \"registered_on\": {\r",
											"                        \"$id\": \"#/items/anyOf/0/properties/registered_on\",\r",
											"                        \"type\": \"string\",\r",
											"                        \"title\": \"The registered_on schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": \"\",\r",
											"                        \"examples\": [\r",
											"                            \"Wed, 16 Sep 2020 19:53:17 GMT\"\r",
											"                        ]\r",
											"                    }\r",
											"                },\r",
											"                \"additionalProperties\": true\r",
											"            }\r",
											"        ]\r",
											"    }\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{authUrl}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/get-company-users/175",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"get-company-users",
										"175"
									]
								},
								"description": "BRD: Company admin should be able to view user list.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPre condition: Registered company admin should be able to log in through valid credentials.\r\n\r\nObjective:GET request to list out all the admins and their roles from db.\r\n\r\nRequest Header: 'Authorization: Bearer $JWT_auth_token'\r\n\r\nResponse: Admin list with their all informations."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-21 Company_admin_super_admin_refresh_token",
					"item": [
						{
							"name": "2.1 FFME2-12 User_login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c2b17924-2180-4c9e-b8e7-bf0aca96d94f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"auth_token1\", jsonData.auth_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\",\r",
											"            \"message\": \"Successfully logged in.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"auth_token\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"auth_token\": {\r",
											"            \"$id\": \"#/properties/auth_token\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The auth_token schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\"\r",
											"            ]\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully logged in.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"phone_number\": \"01767666911\",\r\n    \"firebase_id\": \"firebase_ididid\",\r\n    \"secret_text\": \"the_super_secret_text\",\r\n    \"phone_number_int\": \"+8801767666911\",\r\n    \"iso_code\": \"BD\"\r\n}"
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/user-login",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"user-login"
									]
								},
								"description": "BRD: App user should be able to login the FFM mobile app.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPrecondition: User should be registered with the system.\r\n\r\nObjective: User should be able to login with their valid information. Log in as user and gives back a JWT Token with user-data.\r\n\r\nTester need to pass these data in the body section\r\n\r\nRequest Body:\r\n\r\n\"phone_number\": \r\n\"firebase_id\": \r\n\"secret_text\": \r\n\"phone_number_int\": \r\n\"iso_code\":\r\n"
							},
							"response": []
						},
						{
							"name": "3.1.6 FFME2-21 SuperAdmin_CompanyAdmin_Refresh_the_token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29706f75-4d60-4d6d-95f2-127662314ffa",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDE2NjMzNTYsImlhdCI6MTYwMTA1ODU1Niwic3ViIjoxNjgsIm1vZHVsZXMiOltdLCJ1c2VyX3R5cGUiOiJHZW5lcmFsIiwibmFtZSI6IkFiaWR1ciBSYWhtYW4iLCJwaG9uZV9udW1iZXIiOiIwMTc2NzY2NjkxMSIsIm1lbWJlcl90eXBlIjozfQ.p9DCoY7Kwk38VzlwFHiueYp20ay8q1ifCSY93nWgQc4\",\r",
											"            \"message\": \"Successfully refreshed token.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"auth_token\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"auth_token\": {\r",
											"            \"$id\": \"#/properties/auth_token\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The auth_token schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDE2NjMzNTYsImlhdCI6MTYwMTA1ODU1Niwic3ViIjoxNjgsIm1vZHVsZXMiOltdLCJ1c2VyX3R5cGUiOiJHZW5lcmFsIiwibmFtZSI6IkFiaWR1ciBSYWhtYW4iLCJwaG9uZV9udW1iZXIiOiIwMTc2NzY2NjkxMSIsIm1lbWJlcl90eXBlIjozfQ.p9DCoY7Kwk38VzlwFHiueYp20ay8q1ifCSY93nWgQc4\"\r",
											"            ]\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully refreshed token.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token1}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{authUrl}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/refresh-token",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"refresh-token"
									]
								},
								"description": "BRD: Techserve4u/Company admin and FFM app user should be able to refresh their authentication token.\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nPre condition: The registered user should be login to the App.\r\n\r\nObjective: GET request to refresh the authentication token for future work.\r\n\r\nRequest Header: 'Authorization: Bearer $JWT_auth_token'\r\n\r\nResponse: Success message with new authentication token."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "FFME2-20 Dashboard_admin_logout",
					"item": [
						{
							"name": "1.3 FFME2-16 SuperAdmin_Company_Admin_login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a80d687-07de-4018-b646-773c5cd6ccf4",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"auth_token\", jsonData.auth_token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\",\r",
											"            \"message\": \"Successfully logged in.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"auth_token\",\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"auth_token\": {\r",
											"            \"$id\": \"#/properties/auth_token\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The auth_token schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDEwNjA0NDMsImlhdCI6MTYwMTA1Njg0Mywic3ViIjozNDcsInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJNciBhYmMiLCJlbWFpbCI6ImNhbGlmb3JuaWFAeWFob28uY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOjE3NSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.oIDKr1mgVIQyKKg1dyxhkiB8w5T0UqDAF7eY9v6lBQU\"\r",
											"            ]\r",
											"        },\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully logged in.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"california@yahoo.com\",\r\n    \"password\": \"1asdf234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/dashboard-user-login",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"dashboard-user-login"
									]
								},
								"description": "Precondition: User should be able to registerd as a panel user in the company. \r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\nObjective: User should be able login their own panel which registerd by their admin. Gain access to the Web Admin Panel with the Panel Admin Credentials\r\n\r\nTester need to pass these informations of the sub user in the body section:\r\n\r\nemail:\r\npassword:\r\n"
							},
							"response": []
						},
						{
							"name": "3.1.7 FFME2-20 Dashboard_Admin_logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be92a768-dc01-4424-9dff-11e55fa893bc",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 600ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
											"});\r",
											"\r",
											"var jsonData = JSON.parse(responseBody)\r",
											"\r",
											"var schema= {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"message\": \"Successfully logged out.\",\r",
											"            \"status\": \"success\"\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"message\",\r",
											"        \"status\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"message\": {\r",
											"            \"$id\": \"#/properties/message\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The message schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"Successfully logged out.\"\r",
											"            ]\r",
											"        },\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"string\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": \"\",\r",
											"            \"examples\": [\r",
											"                \"success\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"additionalProperties\": true\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Schema Validation', function() {\r",
											"  var result=tv4.validateResult(pm.response.json(), schema);\r",
											"    if(!result.valid){\r",
											"        console.log(result);\r",
											"    }\r",
											"    pm.expect(result.valid).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{authUrl}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{authUrl}}/api/v1/field-force/auth/logout-dashboard-user",
									"host": [
										"{{authUrl}}"
									],
									"path": [
										"api",
										"v1",
										"field-force",
										"auth",
										"logout-dashboard-user"
									]
								},
								"description": "BRD: Techserve4u or company admin should be able to logout from the admin panel\r\n\r\nSE: Shiblu Ahmed\r\nPO: Pranto Majumder\r\nQA: Fuad Ahmed\r\nReviewer: Pranto Majumder\r\n\r\npre condition: Registered techserve4u/company admin should be able to login the panel.\r\n\r\n\r\nObjective: GET request to Successfully user logout.\r\n\r\n\r\nRequest Header: 'Authorization: Bearer $JWT_auth_token'.\r\n\r\nResponse: User successfully logged out."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}